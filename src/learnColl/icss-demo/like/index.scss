@use "sass:math";

$expression: "😀", "🤣", "❤️", "😻", "👏", "🤘", "🤡", "🤩", "👍🏼", "🐮", "🎈",
	"💕", "💓", "💚";
body {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
}
.cs-like {
	position: relative;
	width: 50px;
	height: 50px;
	background: none;
	line-height: 1;
	margin: auto;
	li {
		// opacity: 0.1;
		opacity: 0;
		transition: 1.5s opacity 0.8s;
		@for $i from 1 through 50 {
			&:nth-child(#{$i}) {
				position: absolute;
				top: 0;
				left: 0;
				width: 50px;
				height: 50px;
				transform: rotate(#{random() * 80 - 40}deg);
				animation: move
					#{random() *
					2500 +
					1500}ms
					infinite
					#{math.div(random() * 4000, -1000)}s
					cubic-bezier(0.46, 0.53, 0.51, 0.62);
				&::before {
					position: absolute;
					font-size: 50px;
					content: nth($expression, random(length($expression)));
				}
			}
		}
		&:active {
			opacity: 1;
			transition: 0.1s opacity;
		}
	}
}
@keyframes move {
	100% {
		transform: rotate(0) translate(0, -250px);
	}
}
// btn 水波动画
:root {
	--primary-color: royalblue;
}
.button {
	position: relative;
	width: 120px;
	height: 40px;
	line-height: 40px;
	padding: 5px 16px;
	color: #000000d9;
	display: block;
	font-size: 20px;
	margin: 40px auto;
	border: 1px solid #d9d9d9;
	background-color: transparent;
	border-radius: 2px;
	line-height: 1.4;
	box-shadow: 0 8px #00000004;
	cursor: pointer;
	transition: 0.3s;
	&:hover {
		color: var(--primary-color);
		border-color: currentColor;
	}
	&::after {
		content: "";
		position: absolute;
		inset: 0;
		border-radius: inherit;
		// opacity: 0.4;
		opacity: 0;
		box-shadow: 0 0 0 6px var(--primary-color);
		transition: 0.3s;
	}
	&:active::after {
		box-shadow: none;
		opacity: 0.4;
		transition: 0s;
	}
}

// 点赞数字累加
.cs-like-btn {
	position: relative;
	width: 120px;
	height: 40px;
	line-height: 40px;
	display: block;
	margin: 40px auto;
	&::after {
		position: absolute;
		bottom: 100%;
		min-width: 100%;
		width: max-content;
		font-size: 2rem;
		font-style: italic;
		font-weight: bolder;
		background-image: linear-gradient(#ffcf02, #ff7352);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		content: "x10";
		/**/
		transform: translateY(100%);
		opacity: 0;
		visibility: hidden;
		// transition: 0.3s;
		transition: 0.3s 0.3s, 0s 0.6s transform; /*默认情况下没有transform*/
		/*计时器*/
		--t: 0;
		counter-reset: time var(--t);
		content: counter(time) counter(time, 鼓励);
		animation: count 100s steps(999) forwards;
		animation-play-state: paused; /*默认暂停*/
	}
	&:active::after {
		visibility: visible;
		opacity: 1;
		transform: translateY(0);
		transition: 0.3s;
		animation-play-state: running; /*按下运行*/
	}
}
@keyframes count {
	to {
		--t: 999;
	}
}
@property --t {
	syntax: "<integer>";
	inherits: false;
	initial-value: 0;
}
@counter-style 鼓励 {
	system: cyclic;
	symbols: "鼓励！";
	range: 0 20;
	fallback: 加油;
}
@counter-style 加油 {
	system: cyclic;
	symbols: "加油！！";
	range: 0 50; /*进入到这个计数器，起点肯定已经超过了20*/
	fallback: 太棒了;
}
@counter-style 太棒了 {
	system: cyclic;
	symbols: "太棒了！！！";
}
