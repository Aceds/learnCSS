/* 传统实现-display:table */
.cw-content-table {
	display: table;
	margin: auto;
}
/* fit-content实现 */
.cw-content-fit {
	width: fit-content;
	margin: auto;
}

/*word break*/
.break-txt {
	display: flex;
	justify-content: center;
	p {
		width: 140px;
		padding: 10px;
		border: solid deepskyblue;
	}
	.break-all {
		word-break: break-all;
	}
	.break-word {
		width: 8em;
		word-wrap: break-word;
	}
	.line-break {
		width: 8em;
		line-break: anywhere;
	}
}
.underline-txt {
	display: flex;
	justify-content: center;
	p {
		text-decoration: underline;
		font-size: 20px;
		margin: 0 10px;
	}
	.under {
		text-underline-position: under;
	}
	.offset {
		text-underline-offset: 10px;
	}
}
.btn-add,
.btn-sub {
	width: 30px;
	height: 30px;
	border: 1px solid #000;
	background: linear-gradient(currentColor, currentColor) no-repeat
			center/.875em 2px,
		linear-gradient(currentColor, currentColor) no-repeat center/2px 0.875em,
		ghostwhite;
	color: #000;
}
.btn-sub {
	background-size: 0.875em 2px, 0;
}
.square {
	width: 304px;
	height: 160px;
	background-color: #fff;
	background-image: linear-gradient(
			45deg,
			red 25%,
			transparent 25%,
			transparent 75%,
			red 75%
		),
		linear-gradient(
			45deg,
			red 25%,
			transparent 25%,
			transparent 75%,
			red 75%
		);
	background-size: 16px 16px;
	background-position: 0 0, 8px 8px;
}
.outline-offset {
	display: flex;
	img {
		width: 100px;
		&:hover {
			outline: 3px solid green;
			outline-offset: -3px;
		}
	}
}
.zoom-in {
	cursor: zoom-in;
}
.zoom-out {
	cursor: zoom-out;
}
.pie-simple {
	width: 128px;
	height: 128px;
	display: flex;
	background-color: #eee;
	border-radius: 50%;
	overflow: hidden;
	.pie-left,
	.pie-right {
		position: relative;
		width: 50%;
		height: 100%;
		overflow: hidden;
	}
	.pie-left::before,
	.pie-right::before,
	.pie-right::after {
		content: "";
		position: absolute;
		width: 100%;
		height: 100%;
		background-color: blueviolet;
	}
	.pie-left::before {
		left: 100%;
		transform-origin: left;
		transform: rotate(calc(3.6deg * (var(--percent) - 50)));
		opacity: calc(9999 * (var(--percent) - 50));
	}
	.pie-right::before {
		right: 100%;
		transform-origin: right;
		transform: rotate(calc(3.6deg * var(--percent)));
	}
	.pie-right::after {
		opacity: calc(99999 * (var(--percent) - 50));
	}
}
.rank-tag {
	counter-reset: nums;
	list-style: none;
	display: flex;
	li {
		position: relative;
		width: 120px;
		height: 120px;
		background-color: #fff;
		border: 1px solid #eee;
		margin: 2px;
		&::before {
			content: counter(nums);
			counter-increment: nums;
			width: 30px;
			height: 30px;
			position: absolute;
			right: 0;
			top: 0;
			text-align: center;
			line-height: 24px;
			color: #fff;
			border-bottom-left-radius: 100%;
			background-color: rgba($color: #000000, $alpha: 0.6);
		}
		&:first-child {
			&::after {
				content: "";
				position: absolute;
				width: 15px;
				height: 10px;
				color: deepskyblue;
				border-top: 10px solid;
				border-top-left-radius: 80%;
				left: 0;
				bottom: 0;
				margin-left: -12px;
				transform: skewX(-30deg) scaleY(1.3);
				z-index: -1;
			}
		}
	}
}
.bar {
	line-height: 20px;
	background-color: #eee;
}
.bar::before {
	counter-reset: progress var(--progress);
	content: counter(progress) "%\2002";
	display: block;
	width: calc(1% * var(--progress));
	color: #fff;
	background-color: deepskyblue;
	text-align: right;
}
//btns
.cs-button {
	button {
		height: 40px;
		border: none;
		padding: 0 20px;
		background-color: #2a80eb;
		color: #fff;
		border-radius: 4px;
		outline: none;
	}
	.button-a {
		background-image: radial-gradient(
				farthest-side at bottom left,
				rgba(255, 0, 255, 0.5),
				transparent
			),
			radial-gradient(
				farthest-corner at bottom right,
				rgba(255, 255, 50, 0.5),
				transparent
			);
	}
	.button-a:active {
		box-shadow: inset 0 0 0 999px rgba(0, 0, 0, 0.1);
	}
	.button-b {
		background-image: radial-gradient(
			160% 100% at 50% 0%,
			hsla(0, 0%, 100%, 0.3) 50%,
			hsla(0, 0%, 100%, 0) 52%
		);
	}
	.button-b:active {
		background-image: radial-gradient(
			160% 100% at 50% 0%,
			hsla(0, 0%, 100%, 0.2) 50%,
			hsla(0, 0%, 100%, 0) 52%
		);
	}

	.button-c {
		background-image: radial-gradient(
			closest-side circle,
			rgba(255, 70, 70, 0.9),
			rgba(255, 70, 70, 0.9) 99%,
			rgba(255, 70, 70, 0) 100%
		);
		background-repeat: no-repeat;
		background-position: center;
		background-size: 0% 0%;
		transition: all 0.2s;
	}
	.button-c:active {
		background-size: 250% 250%;
	}
}

.animation-delay {
	.loading {
		i {
			display: inline-block;
			width: 2px;
			height: 2px;
			background-color: red;
			margin: 20px 2px;
			animation: scaleUp 4s linear infinite alternate;
			margin: 0 1px;
		}
		@for $i from 2 through 4 {
			&:nth-child(#{$i}) {
				animation-delay: calc(calc(#{$i} - 1) * 1s);
			}
		}
		&.negative i {
			@for $i from 2 through 4 {
				&:nth-child(#{$i}) {
					animation-delay: calc(calc(#{$i} - 1) * -1s);
				}
			}
		}
	}

	@keyframes scaleUp {
		to {
			transform: scaleY(10);
		}
	}
}
.clock-pendulum {
	width: 20px;
	height: 100px;
	background: radial-gradient(
				10px at left 50% bottom 10px,
				deepskyblue 100%,
				transparent 0
			)
			no-repeat center,
		radial-gradient(4px at 50% 4px, deepskyblue 100%, transparent 0)
			no-repeat center,
		linear-gradient(to right, currentColor, currentColor) no-repeat center;
	background-size: 100%, 100%, 2px 100%;
	margin: auto;
}
/* 动画相关 */
.clock-pendulum {
	transform-origin: center 4px;
	animation: pendulum 1s infinite alternate ease-in-out;
}
@keyframes pendulum {
	0% {
		transform: rotate(-10deg);
	}
	100% {
		transform: rotate(10deg);
	}
}
.box-break-radius {
	width: 150px;
	color: #fff;
	line-height: 1.8;
	span {
		border-radius: 30px;
		background-color: #cd0000;
		-webkit-box-decoration-break: clone;
		box-decoration-break: clone;
	}
}
[class^="form-label"] {
	display: flex;
	dt {
		width: 80px;
		margin-right: 10px;
	}
	dd {
		margin: 0;
	}
}
.form-label {
	dt {
		text-align: justify;
		&::after {
			content: "";
			display: inline-block;
			width: 100%;
		}
	}
}
.form-label-space {
	text-align-last: justify;
}
.show-counter {
	counter-reset: index;
	font-size: 20px;
	color: #000;
	li {
		list-style: none;
		&::before {
			content: counter(index);
			counter-increment: index;
		}
	}
}
